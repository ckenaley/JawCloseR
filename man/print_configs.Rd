% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/support.R
\name{print_configs}
\alias{print_configs}
\title{Plot and print descriptions of configurations supported by \code{JawCloseR}}
\usage{
print_configs(config = NULL)
}
\arguments{
\item{config}{numeric, the configuration.}
}
\value{
A text description of the configurations is printed to the console along with a \code{ggplot} object.
}
\description{
Plots approximate positions of muscle divisions in the different configurations supported by JawCloseR.  Prints a description of each muscle division to console.
}
\details{
This function is intended to help the user choose which configuration to implement in \code{start_sim()}. The choice will, of course, depend on the species being modeled. For the most part, the names of muscle divisions are arbitrary with regards to the model. Much ink has been spilled over the nomenclature and homology of fish jaw adductors. The \eqn{A_2} and \eqn{A_3} divisions can represent separate adductors applying torque to the lower jaw, however, at the same inlever position in configurations 1 and 5. The implementation of the \eqn{A_1} and \eqn{A_\omega} divisions (configurations 4 and 5), however, represent special cases. \eqn{A_1} is implemented as a division applying torque to the lower jaw via a tendon with inserting on a stationary dorsal point (i.e., the origin of the \eqn{A_1} tendon on the maxilla). \eqn{A_\omega} represents an intramandibular division, originating along the lower jaw and either inserting on the Meckelian tendon (along with \eqn{A_2} and \eqn{A_3} in configuration 3) or on suspensorium (configuration 5).
}
\examples{

#without a jaw
start_sim(config=3) \%>\%
   close_jaw() \%>\%
    {. ->> cs } \%>\%
   animate_close(addjaw=TRUE,jawsp="LMBass")

#with a jaw (oddly, a wrasse jaw)

cs \%>\%
   animate_close(addjaw=TRUE,jawsp="LMBass")

cs_an <- cs \%>\%
   animate_close(render=FALSE)

#looks terrible
cs_an2 <- cs_an+shadow_wake(0.1, size = 2, alpha = FALSE, colour = 'grey92')
animate(cs_an2)

x=cs
}
